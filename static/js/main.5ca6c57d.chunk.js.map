{"version":3,"sources":["scrollconfig.js","assets/index.js","assets/me.jpeg","assets/cosmonaut.png","assets/logo.svg","assets/rightArrow.svg","assets/upArrow.svg","assets/world.svg","components/AsideNav/index.js","components/ContentContainer/index.js","components/Loading/index.js","components/Nav/Link.js","components/Nav/index.js","components/Section/index.js","index.js"],"names":["SCROLL_DELAY","SCROLL_DURATION","SCROLL_OFFSET","module","exports","AsideNav","currentSection","isNavOpen","sections","asideRef","useRef","useEffect","gsap","timeline","from","current","x","delay","duration","ease","className","ref","map","index","name","title","key","defaultProps","ContentContainer","children","Loading","Link","handleClick","handleKeyDown","handleSetActive","activeClass","onClick","offset","onKeyDown","onSetActive","role","tabIndex","to","smooth","spy","Nav","setCurrentSection","setIsNavOpen","useState","isOpen","setIsOpen","opacity","stagger","toggleNav","debounce","alt","src","logo","aria-controls","aria-expanded","aria-haspopup","aria-label","type","id","e","keyCode","preventDefault","target","click","length","shiftKey","Section","registerPlugin","ScrollTrigger","App","React","lazy","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.5ca6c57d.chunk.js","sourcesContent":["export const SCROLL_DELAY = 300;\r\nexport const SCROLL_DURATION = 300;\r\n// Height of nav\r\nexport const SCROLL_OFFSET = -80;\r\n","export { default as me } from './me.jpeg';\r\nexport { default as cosmonaut } from './cosmonaut.png';\r\nexport { default as logo } from './logo.svg';\r\nexport { default as rightArrow } from './rightArrow.svg';\r\nexport { default as upArrow } from './upArrow.svg';\r\nexport { default as world } from './world.svg';\r\n","module.exports = __webpack_public_path__ + \"static/media/me.3e3488f1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cosmonaut.bb026ce2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.0b90ee83.svg\";","module.exports = __webpack_public_path__ + \"static/media/rightArrow.ac1495af.svg\";","module.exports = __webpack_public_path__ + \"static/media/upArrow.a4f91e56.svg\";","module.exports = __webpack_public_path__ + \"static/media/world.706d9614.svg\";","import gsap from 'gsap';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.scss';\r\n\r\nconst AsideNav = ({ currentSection, isNavOpen, sections }) => {\r\n  const asideRef = useRef(null);\r\n  useEffect(() => {\r\n    gsap.timeline().from(asideRef.current, {\r\n      x: -120,\r\n      delay: 0.5,\r\n      duration: 0.5,\r\n      ease: 'power4.out',\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <aside\r\n      className={`aside ${isNavOpen ? 'aside--hidden' : ''}`}\r\n      ref={asideRef}\r\n    >\r\n      <div className=\"aside__bar\" />\r\n      <ul className=\"aside__list\">\r\n        {sections.map(({ name, title }, index) => (\r\n          <li\r\n            className={`aside__section ${\r\n              currentSection === name ? 'aside__section--active' : ''\r\n            }`}\r\n            key={name}\r\n          >\r\n            <span className=\"aside__section-index\">{`0${index + 1}`}</span>\r\n            <span className=\"aside__section-name\">{title}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nAsideNav.propTypes = {\r\n  currentSection: PropTypes.string,\r\n  isNavOpen: PropTypes.bool.isRequired,\r\n  sections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      title: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nAsideNav.defaultProps = {\r\n  currentSection: null,\r\n};\r\n\r\nexport default AsideNav;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.scss';\r\n\r\nconst ContentContainer = ({ children, isNavOpen }) => (\r\n  <div className={`content ${isNavOpen ? 'moved' : ''}`}>{children}</div>\r\n);\r\n\r\nContentContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  isNavOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ContentContainer;\r\n","import React from 'react';\r\n\r\nimport './styles.scss';\r\n\r\nconst Loading = () => (\r\n  <div className=\"loading\">\r\n    <div className=\"loading__spinner\" />\r\n    <p className=\"loading__title\">Loading</p>\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as ScrollLink } from 'react-scroll';\r\n\r\nimport { SCROLL_DELAY, SCROLL_DURATION, SCROLL_OFFSET } from 'scrollconfig';\r\n\r\nconst Link = ({\r\n  handleClick,\r\n  handleKeyDown,\r\n  handleSetActive,\r\n  index,\r\n  isNavOpen,\r\n  name,\r\n  title,\r\n}) => (\r\n  <ScrollLink\r\n    activeClass=\"nav__list-item--active\"\r\n    className=\"nav__list-item\"\r\n    delay={SCROLL_DELAY}\r\n    duration={SCROLL_DURATION + 150 * index}\r\n    onClick={handleClick}\r\n    offset={SCROLL_OFFSET}\r\n    onKeyDown={handleKeyDown}\r\n    onSetActive={handleSetActive}\r\n    role=\"menuitem\"\r\n    tabIndex={isNavOpen ? '0' : '-1'}\r\n    to={name}\r\n    smooth\r\n    spy\r\n  >\r\n    {title}\r\n  </ScrollLink>\r\n);\r\n\r\nLink.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n  handleKeyDown: PropTypes.func.isRequired,\r\n  handleSetActive: PropTypes.func.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  isNavOpen: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Link;\r\n","import { debounce } from 'lodash';\r\nimport gsap from 'gsap';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { logo } from 'assets';\r\nimport Link from './Link';\r\nimport './styles.scss';\r\n\r\nconst Nav = ({ isNavOpen, sections, setCurrentSection, setIsNavOpen }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      gsap.from('.nav__list-item', {\r\n        x: -150,\r\n        ease: 'power4.out',\r\n        duration: 0.2,\r\n        delay: 0.2,\r\n        opacity: 0,\r\n        stagger: 0.1,\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleNav = () => {\r\n    setIsOpen(!isOpen);\r\n    setIsNavOpen(!isNavOpen);\r\n  };\r\n\r\n  const handleKeyDown = (e, index) => {\r\n    // Click on enter\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      e.target.click();\r\n    }\r\n\r\n    // Close nav when tabbing out or hitting escape key\r\n    if (\r\n      (index === sections.length - 1 && !e.shiftKey && e.keyCode === 9) ||\r\n      e.keyCode === 27\r\n    ) {\r\n      toggleNav();\r\n    }\r\n  };\r\n\r\n  const handleSetActive = debounce((name) => {\r\n    setCurrentSection(name);\r\n  }, 100);\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"nav__brand\">\r\n        <img className=\"nav__logo\" alt=\"Front end developer\" src={logo} />\r\n        <span className=\"nav__logo-text\">Front-End Dev</span>\r\n      </div>\r\n\r\n      <button\r\n        aria-controls=\"navigation\"\r\n        aria-expanded={isNavOpen ? 'true' : 'false'}\r\n        aria-haspopup=\"true\"\r\n        aria-label={isNavOpen ? 'Close navigation' : 'Open navigation'}\r\n        className={`nav__burger ${isNavOpen ? 'nav__burger--open' : ''}`}\r\n        onClick={toggleNav}\r\n        type=\"button\"\r\n      >\r\n        <div className=\"nav__burger-part\" />\r\n        <div className=\"nav__burger-part\" />\r\n        <div className=\"nav__burger-part\" />\r\n      </button>\r\n      <ul\r\n        className={`nav__list ${isOpen ? 'nav__list--active' : ''}`}\r\n        id=\"navigation\"\r\n        role=\"menu\"\r\n      >\r\n        {sections.map(({ name, title }, index) => (\r\n          <li key={name} role=\"none\">\r\n            <Link\r\n              handleClick={toggleNav}\r\n              handleKeyDown={(e) => handleKeyDown(e, index)}\r\n              handleSetActive={handleSetActive}\r\n              index={index}\r\n              isNavOpen={isNavOpen}\r\n              name={name}\r\n              title={title}\r\n            >\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  isNavOpen: PropTypes.bool.isRequired,\r\n  sections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      title: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  setCurrentSection: PropTypes.func.isRequired,\r\n  setIsNavOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.scss';\r\n\r\nconst Section = ({ children, id, title }) => {\r\n  return (\r\n    <section className=\"section\" id={id}>\r\n      {title && <h2 className=\"section__title\">{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default Section;\r\n","import gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/all';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Loading } from './components';\nimport './styles/global.scss';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst App = React.lazy(() => import('./App'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<Loading />}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}